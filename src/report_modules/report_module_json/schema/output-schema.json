{
  "type": "object",
  "properties": {
    "inputFile": {
      "type": "string",
      "descrition": "Input file defined for the current run of the checker"
    },
    "bundles": {
      "type": "object",
      "description": "Container for the different bundles executed",
      "patternProperties": {
        "\\w+": {
          "type": "object",
          "description": "Bundle definition. Key is name of the bundle",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the bundle, same as key of the object"
            },
            "summary": {
              "type": "string",
              "description": "Human readable description of the bundle run"
            },
            "buildDate": {
              "type": "string",
              "description": "bundle build date in YYYY-MM-DD date format",
              "format": "date"
            },
            "description": {
              "type": "string",
              "decription": "Bundle provided description"
            },
            "parameters": {
              "type": "object",
              "description": "Parameters defined on the bundle. Keys are parameters name",
              "patternProperties": {
                "\\w+": {
                  "type": "string",
                  "description": "Value for the parameters"
                }
              }
            },
            "checkers": {
              "type": "object",
              "description": "Collection of checkers declared by the bundle, properties names are name of checker",
              "patternProperties": {
                "\\w+": {
                  "type": "object",
                  "description": "Definition of the results for a single checker",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Identifier for the checker"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the checker"
                    },
                    "status": {
                      "type": "string",
                      "description": "Checker report status"
                    },
                    "summary": {
                      "type": "string",
                      "description": "Checker summary report"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "Parameters defined on the checker. Keys are parameters name",
                      "patternProperties": {
                        "\\w+": {
                          "type": "string",
                          "description": "Value for the parameters"
                        }
                      }
                    },
                    "issues": {
                      "type": "array",
                      "description": "List of issue declared by the checker",
                      "items": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string",
                            "description": "Level for the issue",
                            "enum": [
                              "info",
                              "warning",
                              "description"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description for the issue provided by the checker"
                          },
                          "ruleID": {
                            "type": "string",
                            "description": "Optional rule unique identifier related to issue"
                          },
                          "locations": {
                            "type": "array",
                            "description": "Locations informations related to the current issue",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "File location object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "file"
                                    },
                                    "row": {
                                      "type": "integer"
                                    },
                                    "column": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "row",
                                    "column"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "description": "XML location object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "xml"
                                    },
                                    "xpath": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "xpath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "description": "Inertial location object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "inertial"
                                    },
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    },
                                    "z": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "x",
                                    "y",
                                    "z"
                                  ]
                                }
                              ]
                            }
                          },
                          "domainSpecificInfo": {
                            "type": "object",
                            "description": "Container for optional domain specific information, in xml format.We try to escape it but we cannot guarantee it will work",
                            "patternProperties": {
                              "\\w+": {
                                "type": "object",
                                "description": "Domain specific information. Name is also pattern property key",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the pattern property for the Domain Specific Info"
                                  },
                                  "xml": {
                                    "type": "string",
                                    "format": "xml",
                                    "description": "Escaped XML document with the domain specific info"
                                  }
                                },
                                "required": [
                                  "name",
                                  "xml"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "level",
                          "description"
                        ]
                      }
                    },
                    "rules": {
                      "type": "array",
                      "description": "List of rules addressed by the current checker",
                      "items": {
                        "type": "string",
                        "description": "Rules Unique Identifier"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Container for user specified metadata",
                      "patternProperties": {
                        "\\w+": {
                          "type": "object",
                          "description": "Metadata value and description object. Key is equal to pattern property",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key for the current metadata"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value for the current metadata"
                            },
                            "decription": {
                              "type": "string",
                              "description": "Description for the current metadata"
                            },
                            "required": [
                              "key",
                              "value",
                              "description"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "name",
              "summary",
              "buildDate",
              "buildVarsion",
              "description"
            ]
          }
        }
      },
      "report": {
        "type": "object",
        "description": "Summary for addressed rules",
        "properties": {
          "addressed": {
            "type": "array",
            "description": "list of all addressed rules",
            "items": {
              "type": "string",
              "description": "Rule UID value"
            }
          },
          "violated": {
            "type": "object",
            "description": "Summary for violated rules, per severity",
            "properties": {
              "info": {
                "type": "array",
                "description": "list of all addressed rules with info issues",
                "items": {
                  "type": "string",
                  "description": "Rule UID value"
                }
              },
              "warning": {
                "type": "array",
                "description": "list of all addressed rules with warning issues",
                "items": {
                  "type": "string",
                  "description": "Rule UID value"
                }
              },
              "error": {
                "type": "array",
                "description": "list of all addressed rules with error issues",
                "items": {
                  "type": "string",
                  "description": "Rule UID value"
                }
              }
            },
            "required": [
              "error",
              "warning",
              "info"
            ]
          }
        },
        "required": [
          "addressed",
          "violated"
        ]
      }
    }
  }
}